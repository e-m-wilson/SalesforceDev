import { createElement } from 'lwc';
import WireServiceExample from 'c/wireServiceExample';
import getAccountList from '@salesforce/apex/AccountHelper.getAccountList';

jest.mock(
    '@salesforce/apex/AccountHelper.getAccountList',
    () => {
        const { createApexTestWireAdapter } = require('@salesforce/sfdx-lwc-jest');
        return { default: createApexTestWireAdapter(jest.fn())};
    },
    { virtual: true }
)

describe('c-wire-service-example', () => {

    beforeAll(() => {
        // should use the following if setTimeout is called in the js file of the component
        // jest.useFakeTimers();
    });

    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }

        // prevents data saved on mocks from leaking between tests
        jest.clearAllMocks();
    });

    it('TODO: test case generated by CLI command, please fill in test logic', () => {


        // Arrange
        const element = createElement('c-wire-service-example', {
            is: WireServiceExample
        });

        // Act
        document.body.appendChild(element);

        const input = element.shadowRoot.querySelector('lightning-input');
        input.value = 'Some Account Name';
        input.dispatchEvent(new CustomEvent('change'));

        const mockAccList = require('./data/_wireAdapter.json');
        getAccountList.emit(mockAccList);

        return Promise.resolve().then(() => {
            // Assert
            // const div = element.shadowRoot.querySelector('div');
            const datatable = element.shadowRoot.querySelector('.propertyDatatable');
            expect(datatable.data.data[0].Name).toBe('Burlington Textiles Corp of America');
        });

        
    });
});