import { createElement } from 'lwc';
import CaseForm from 'c/caseForm';

describe('c-case-form', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    async function flushPromises() {
        return Promise.resolve();
    }

    it('TODO: test case generated by CLI command, please fill in test logic', async () => {
        // Arrange
        const element = createElement('c-case-form', {
            is: CaseForm
        });

        // Act
        document.body.appendChild(element);

        let input = element.shadowRoot.querySelector('lightning-input');
        let combobox = element.shadowRoot.querySelector('lightning-combobox');

        input.value = 'Test';
        input.dispatchEvent(new CustomEvent('change'));

        combobox.value = 'Phone';
        combobox.dispatchEvent(new CustomEvent('change', {
            detail: { value: combobox.value }
        }));
        
        await flushPromises();


        // Assert
        // const div = element.shadowRoot.querySelector('div');
        expect(combobox.value).toBe('Phone');
    });
});